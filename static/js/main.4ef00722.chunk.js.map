{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Statistics","this","props","totalFeedback","good","neutral","bad","positivePercentage","className","styles","statsItem","Component","FeedbackOptions","statsBlock","type","statsBtn","onClick","onLeaveFeedback","Notification","notificationMessage","message","Section","statistics","total","notification","App","state","handleFeedback","setState","countTotalFeedback","Object","values","reduce","accumulator","currentValue","countPositiveFeedbackPercentage","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,UAAY,gC,gBCA9BD,EAAOC,QAAU,CAAC,SAAW,oC,mBCA7BD,EAAOC,QAAU,CAAC,oBAAsB,4C,4LCsCzBC,E,uKAlCH,IAAD,EAC2DC,KAAKC,MAA/DC,EADD,EACCA,cAAeC,EADhB,EACgBA,KAAMC,EADtB,EACsBA,QAASC,EAD/B,EAC+BA,IAAKC,EADpC,EACoCA,mBAS3C,OACE,mCACE,gCACE,oBAAGC,UAAWC,IAAOC,UAArB,mBACQ,+BAAON,OAEf,oBAAGI,UAAWC,IAAOC,UAArB,sBACW,+BAAOL,OAElB,oBAAGG,UAAWC,IAAOC,UAArB,kBACO,+BAAOJ,OAEd,oBAAGE,UAAWC,IAAOC,UAArB,oBACS,+BAAOP,OAEhB,oBAAGK,UAAWC,IAAOC,UAArB,gCACqB,iCAAOH,EAAP,mB,GA3BNI,a,gBCoBVC,E,uKApBH,IAAD,OACP,OACE,gCACE,wDACA,sBAAKJ,UAAWC,IAAOI,WAAvB,UACE,wBAAQC,KAAK,SAASN,UAAWC,IAAOM,SAAUC,QAAS,kBAAM,EAAKd,MAAMe,gBAAgB,SAA5F,kBAGA,wBAAQH,KAAK,SAASN,UAAWC,IAAOM,SAAUC,QAAS,kBAAM,EAAKd,MAAMe,gBAAgB,YAA5F,qBAGA,wBAAQH,KAAK,SAASN,UAAWC,IAAOM,SAAUC,QAAS,kBAAM,EAAKd,MAAMe,gBAAgB,QAA5F,2B,GAZoBN,a,iBCUfO,E,uKARX,OACE,mCACE,mBAAGV,UAAWC,IAAOU,oBAArB,SAA2ClB,KAAKC,MAAMkB,gB,GAJnCT,aCwBZU,E,uKArBH,IAEJC,EAFG,EACoErB,KAAKC,MAAxEqB,EADD,EACCA,MAAOnB,EADR,EACQA,KAAMC,EADd,EACcA,QAASC,EADvB,EACuBA,IAAKC,EAD5B,EAC4BA,mBAAoBU,EADhD,EACgDA,gBAEnDO,EAAe,cAAC,EAAD,CAAcJ,QAAQ,sBAOzC,OANIG,EAAQ,IACVD,EACE,cAAC,EAAD,CAAYlB,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKiB,MAAOA,EAAOhB,mBAAoBA,IAExFiB,EAAe,IAGf,qCACE,cAAC,EAAD,CAAiBP,gBAAiBA,IAClC,4CACCO,EACAF,S,GAhBaX,aC2CPc,E,4MA3CbC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPqB,eAAiB,SAACb,GAChB,EAAKc,UAAS,SAACF,GACb,OAAO,eACJZ,EAAOY,EAAMZ,GAAQ,O,EAK5Be,mBAAqB,WAEnB,OAAOC,OAAOC,OAAO,EAAKL,OAAOM,QADjB,SAACC,EAAaC,GAAd,OAA+BD,EAAcC,M,EAI/DC,gCAAkC,SAACZ,GAAW,IACpCnB,EAAS,EAAKsB,MAAdtB,KACR,OAAOgC,KAAKC,MAAO,IAAMd,EAASnB,I,uDAG1B,IAAD,EACwBH,KAAKyB,MAA5BtB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBH,EAAgBF,KAAK4B,qBACrBtB,EAAqBN,KAAKkC,gCAAgChC,GAChE,OACE,mCACE,cAAC,EAAD,CACEc,gBAAiBhB,KAAK0B,eACtBvB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLiB,MAAOpB,EACPI,mBAAoBA,U,GArCZI,aCClB2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4ef00722.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsItem\":\"Statistics_statsItem__3yIwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsBtn\":\"FeedbackOptions_statsBtn__31-ig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationMessage\":\"Notification_notificationMessage__lDUzx\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    const { totalFeedback, good, neutral, bad, positivePercentage } = this.props;\r\n    Statistics.propTypes = {\r\n      good: PropTypes.number,\r\n      neutral: PropTypes.number,\r\n      bad: PropTypes.number,\r\n      totalFeedback: PropTypes.number,\r\n      positivePercentage: PropTypes.number,\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <p className={styles.statsItem}>\r\n            Good: <span>{good}</span>\r\n          </p>\r\n          <p className={styles.statsItem}>\r\n            Neutral: <span>{neutral}</span>\r\n          </p>\r\n          <p className={styles.statsItem}>\r\n            Bad: <span>{bad}</span>\r\n          </p>\r\n          <p className={styles.statsItem}>\r\n            Total: <span>{totalFeedback}</span>\r\n          </p>\r\n          <p className={styles.statsItem}>\r\n            Positive feedback: <span>{positivePercentage}%</span>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Please, leave feedback</h2>\r\n        <div className={styles.statsBlock}>\r\n          <button type=\"button\" className={styles.statsBtn} onClick={() => this.props.onLeaveFeedback(\"good\")}>\r\n            Good\r\n          </button>\r\n          <button type=\"button\" className={styles.statsBtn} onClick={() => this.props.onLeaveFeedback(\"neutral\")}>\r\n            Neutral\r\n          </button>\r\n          <button type=\"button\" className={styles.statsBtn} onClick={() => this.props.onLeaveFeedback(\"bad\")}>\r\n            Bad\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nclass Notification extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <p className={styles.notificationMessage}>{this.props.message}</p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nclass Section extends Component {\r\n  render() {\r\n    const { total, good, neutral, bad, positivePercentage, onLeaveFeedback } = this.props;\r\n    let statistics;\r\n    let notification = <Notification message=\"No feedback given\" />;\r\n    if (total > 0) {\r\n      statistics = (\r\n        <Statistics good={good} neutral={neutral} bad={bad} total={total} positivePercentage={positivePercentage} />\r\n      );\r\n      notification = \"\";\r\n    }\r\n    return (\r\n      <>\r\n        <FeedbackOptions onLeaveFeedback={onLeaveFeedback} />\r\n        <h2>Statistics</h2>\r\n        {notification}\r\n        {statistics}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = (type) => {\n    this.setState((state) => {\n      return {\n        [type]: state[type] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n    return Object.values(this.state).reduce(reducer);\n  };\n\n  countPositiveFeedbackPercentage = (total) => {\n    const { good } = this.state;\n    return Math.round((100 / total) * good);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(totalFeedback);\n    return (\n      <>\n        <Section\n          onLeaveFeedback={this.handleFeedback}\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={totalFeedback}\n          positivePercentage={positivePercentage}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}