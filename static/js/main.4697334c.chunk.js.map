{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["module","exports","Section","this","props","title","children","Component","Statistics","total","good","neutral","bad","positivePercentage","className","styles","statsItem","Notification","notificationMessage","message","FeedbackOptions","onLeaveFeedback","statsBlock","type","statsBtn","onClick","App","state","handleFeedback","setState","countTotalFeedback","Object","values","reduce","accumulator","currentValue","countPositiveFeedbackPercentage","Math","round","totalFeedback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,UAAY,gC,gBCA9BD,EAAOC,QAAU,CAAC,SAAW,oC,mBCA7BD,EAAOC,QAAU,CAAC,oBAAsB,4C,oKCazBC,G,6KAXH,IAAD,EACqBC,KAAKC,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SACf,OACE,qCACE,6BAAKD,IACJC,S,GANaC,c,gBCqCPC,E,uKAlCH,IAAD,EACmDL,KAAKC,MAAvDK,EADD,EACCA,MAAOC,EADR,EACQA,KAAMC,EADd,EACcA,QAASC,EADvB,EACuBA,IAAKC,EAD5B,EAC4BA,mBASnC,OACE,mCACE,gCACE,oBAAGC,UAAWC,IAAOC,UAArB,mBACQ,+BAAON,OAEf,oBAAGI,UAAWC,IAAOC,UAArB,sBACW,+BAAOL,OAElB,oBAAGG,UAAWC,IAAOC,UAArB,kBACO,+BAAOJ,OAEd,oBAAGE,UAAWC,IAAOC,UAArB,oBACS,+BAAOP,OAEhB,oBAAGK,UAAWC,IAAOC,UAArB,gCACqB,iCAAOH,EAAP,mB,GA3BNN,a,iBCSVU,E,uKARX,OACE,mCACE,mBAAGH,UAAWC,IAAOG,oBAArB,SAA2Cf,KAAKC,MAAMe,gB,GAJnCZ,a,gBCqBZa,E,uKApBH,IACDC,EAAmBlB,KAAKC,MAAxBiB,gBACP,OACE,8BACE,sBAAKP,UAAWC,IAAOO,WAAvB,UACE,wBAAQC,KAAK,SAAST,UAAWC,IAAOS,SAAUC,QAAS,kBAAMJ,EAAgB,SAAjF,kBAGA,wBAAQE,KAAK,SAAST,UAAWC,IAAOS,SAAUC,QAAS,kBAAMJ,EAAgB,YAAjF,qBAGA,wBAAQE,KAAK,SAAST,UAAWC,IAAOS,SAAUC,QAAS,kBAAMJ,EAAgB,QAAjF,0B,GAZoBd,aC8DfmB,E,4MAxDbC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPgB,eAAiB,SAACL,GAChB,EAAKM,UAAS,SAACF,GACb,OAAO,eACJJ,EAAOI,EAAMJ,GAAQ,O,EAK5BO,mBAAqB,WAEnB,OAAOC,OAAOC,OAAO,EAAKL,OAAOM,QADjB,SAACC,EAAaC,GAAd,OAA+BD,EAAcC,M,EAI/DC,gCAAkC,SAAC3B,GAAW,IACpCC,EAAS,EAAKiB,MAAdjB,KACR,OAAc,IAAVD,EACK,EAEA4B,KAAKC,MAAO,IAAM7B,EAASC,I,uDAI5B,IAAD,EACwBP,KAAKwB,MAA5BjB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjB2B,EAAgBpC,KAAK2B,qBACrBjB,EAAqBV,KAAKiC,gCAAgCG,GAChE,OACE,qCACE,cAAC,EAAD,CAASlC,MAAM,yBAAyBC,SAAU,cAAC,EAAD,CAAiBe,gBAAiBlB,KAAKyB,mBACzF,cAAC,EAAD,CACEtB,SACoB,IAAlBiC,EACE,cAAC,EAAD,CAAcpB,QAAQ,sBAEtB,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLH,MAAO8B,EACP1B,mBAAoBA,IAI1BR,MAAM,sB,GAlDEE,aCHlBiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4697334c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsItem\":\"Statistics_statsItem__3yIwk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsBtn\":\"FeedbackOptions_statsBtn__31-ig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationMessage\":\"Notification_notificationMessage__lDUzx\"};","import React, { Component } from \"react\";\r\n\r\nclass Section extends Component {\r\n  render() {\r\n    const { title, children } = this.props;\r\n    return (\r\n      <>\r\n        <h2>{title}</h2>\r\n        {children}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    const { total, good, neutral, bad, positivePercentage } = this.props;\r\n    Statistics.propTypes = {\r\n      good: PropTypes.number,\r\n      neutral: PropTypes.number,\r\n      bad: PropTypes.number,\r\n      total: PropTypes.number,\r\n      positivePercentage: PropTypes.number,\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <p className={styles.statsItem}>\r\n            Good: <span>{good}</span>\r\n          </p>\r\n          <p className={styles.statsItem}>\r\n            Neutral: <span>{neutral}</span>\r\n          </p>\r\n          <p className={styles.statsItem}>\r\n            Bad: <span>{bad}</span>\r\n          </p>\r\n          <p className={styles.statsItem}>\r\n            Total: <span>{total}</span>\r\n          </p>\r\n          <p className={styles.statsItem}>\r\n            Positive feedback: <span>{positivePercentage}%</span>\r\n          </p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nclass Notification extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <p className={styles.notificationMessage}>{this.props.message}</p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    const {onLeaveFeedback} = this.props\r\n    return (\r\n      <div>\r\n        <div className={styles.statsBlock}>\r\n          <button type=\"button\" className={styles.statsBtn} onClick={() => onLeaveFeedback(\"good\")}>\r\n            Good\r\n          </button>\r\n          <button type=\"button\" className={styles.statsBtn} onClick={() => onLeaveFeedback(\"neutral\")}>\r\n            Neutral\r\n          </button>\r\n          <button type=\"button\" className={styles.statsBtn} onClick={() => onLeaveFeedback(\"bad\")}>\r\n            Bad\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\n\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = (type) => {\n    this.setState((state) => {\n      return {\n        [type]: state[type] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n    return Object.values(this.state).reduce(reducer);\n  };\n\n  countPositiveFeedbackPercentage = (total) => {\n    const { good } = this.state;\n    if (total === 0) {\n      return 0;\n    } else {\n      return Math.round((100 / total) * good);\n    }\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage(totalFeedback);\n    return (\n      <>\n        <Section title=\"Please, leave feedback\" children={<FeedbackOptions onLeaveFeedback={this.handleFeedback} />} />\n        <Section\n          children={\n            totalFeedback === 0 ? (\n              <Notification message=\"No feedback given\" />\n            ) : (\n              <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={totalFeedback}\n                positivePercentage={positivePercentage}\n              />\n            )\n          }\n          title=\"Statistics\"\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}